//----------------Sonic CD Stage Select Script----------------//
//--------Scripted by Christian Whitehead 'The Taxman'--------//
//-------Unpacked By Rubberduckycooly's Script Unpacker-------//

// Aliases
#alias Object.Value0		:	Object.Fade
#alias Object.Value0		:	Object.Timer
#alias Object.Value1		:	Object.SelectedMenu
#alias Object.Value2		:	Object.HoldTimer
#alias Object.Value3		:	Object.TouchButton
#alias Object.Value4		:	Object.BGTimer
#alias Object.Value5		:	Object.CurrentSelection
#alias Object.Value6		:	Object.SelectedMenu
#alias Object.Value7		:	Object.SavedPlayer
#alias Object.Alpha		:	Object.SavedTimePeriod
#alias Object.InkEffect		:	Object.SoundTestNo
#alias Object.Scale		:	Object.SoundTestCooldown
#alias Object.Direction		:	Object.DebugModeIndex
#alias Object.Animation		:	Object.TimeStoneIndex

#alias Object.Frame		:	Object.Pressed
#alias Object.AnimationTimer	:	Object.PressedLR

// States
#alias 0	:	STAGESELECT_SETUP
#alias 1	:	STAGESELECT_FADE_IN
#alias 2	:	STAGESELECT_CONTROLS
#alias 3	:	STAGESELECT_LOAD_LEVEL
#alias 4	:	STAGESELECT_LOAD_SPECIAL
#alias 5	:	STAGESELECT_EXIT

// Presentation Stages
#alias 0	:	STAGE_P_TITLE
#alias 1	:	STAGE_P_MENU

// Special Stages
#alias 0	:	STAGE_S_SZ1

// Global SFX
#alias 1	:	SFX_G_RING
#alias 19	:	SFX_G_SPECIALWARP
#alias 20	:	SFX_G_1UP
#alias 21	:	SFX_G_ACHIEVEMENT
#alias 27	:	SFX_G_SELECT

// Stage SFX
#alias 42	:	SFX_G_FAIL

// Game Mode Aliases
#alias 0	:	MODE_NOSAVE

//Engine & CallBacks
#alias 2	:	MESSAGE_LOSTFOCUS

// Device Type
#alias 1	:	RETRO_MOBILE

// Priority
#alias 1	:	PRIORITY_ACTIVE

// Time Periods
#alias 0	:	TIME_PRESENT
#alias 1	:	TIME_PAST
#alias 2	:	TIME_GOOD_FUTURE
#alias 3	:	TIME_BAD_FUTURE

// Soundtrack
#alias 0	:	OST_JP

// Function Declarations
#function StageSelect_HandleBG
#function StageSelect_PlaySong
#function StageSelect_HandleSecrets
#function StageSelect_HandleButtons

function StageSelect_HandleBG
	Object.BGTimer++
	Object.BGTimer &= 0x1FF
	Sin(TempValue0, Object.BGTimer)
	
	// The background is all chunks and tiles in the level so "animating" it is actually just moving the camera around
	if TempValue0 > 0
		if TempValue0 < 32
			// Second frame
			screen.yoffset = 256
		else
			// First frame
			screen.yoffset = 0
		end if
	else
		if TempValue0 > -32
			// Third frame
			screen.yoffset = 512
		else
			// Fourth frame
			screen.yoffset = 768
		end if
	end if
end function


function StageSelect_PlaySong
	// Don't allow playing of songs in quick succession
	if object.soundTestCooldown == 0
		object.soundTestCooldown = 30

		// Yeah, the round theme ones are really messy,, uh
		// sorry !!!!!!!!!!

		switch Object.SoundTestNo
		case 0
			// Do nothing
			break

		case 1
			if Options.Soundtrack == OST_JP
				switch Object.SavedTimePeriod
				case TIME_PRESENT
					SetMusicTrack("JP/R1A.ogg", 0, 142428)
					break
				case TIME_PAST
					SetMusicTrack("R1B.ogg", 0, 354890)
					break
				case TIME_GOOD_FUTURE
					SetMusicTrack("JP/R1C.ogg", 0, 142902)
					break
				case TIME_BAD_FUTURE
					SetMusicTrack("JP/R1D.ogg", 0, 1)
					break
				end switch
			else
				switch Object.SavedTimePeriod
				case TIME_PRESENT
					SetMusicTrack("US/R1A.ogg", 0, 153038)
					break
				case TIME_PAST
					SetMusicTrack("R1B.ogg", 0, 354890)
					break
				case TIME_GOOD_FUTURE
					SetMusicTrack("US/R1C.ogg", 0, 152346)
					break
				case TIME_BAD_FUTURE
					SetMusicTrack("US/R1D.ogg", 0, 774998)
					break
				end switch
			end if
			PlayMusic(0)
			break

		case 2
			if Options.Soundtrack == OST_JP
				switch Object.SavedTimePeriod
				case TIME_PRESENT
					SetMusicTrack("JP/R3A.ogg", 0, 358725)
					break
				case TIME_PAST
					SetMusicTrack("R3B.ogg", 0, 166278)
					break
				case TIME_GOOD_FUTURE
					SetMusicTrack("JP/R3C.ogg", 0, 1)
					break
				case TIME_BAD_FUTURE
					SetMusicTrack("JP/R3D.ogg", 0, 717648)
					break
				end switch
			else
				switch Object.SavedTimePeriod
				case TIME_PRESENT
					SetMusicTrack("US/R3A.ogg", 0, 1)
					break
				case TIME_PAST
					SetMusicTrack("R3B.ogg", 0, 166278)
					break
				case TIME_GOOD_FUTURE
					SetMusicTrack("US/R3C.ogg", 0, 173494)
					break
				case TIME_BAD_FUTURE
					SetMusicTrack("US/R3D.ogg", 0, 1)
					break
				end switch
			end if
			PlayMusic(0)
			break

		case 3
			if Options.Soundtrack == OST_JP
				switch Object.SavedTimePeriod
				case TIME_PRESENT
					SetMusicTrack("JP/R4A.ogg", 0, 1)
					break
				case TIME_PAST
					SetMusicTrack("R4B.ogg", 0, 1)
					break
				case TIME_GOOD_FUTURE
					SetMusicTrack("JP/R4C.ogg", 0, 1)
					break
				case TIME_BAD_FUTURE
					SetMusicTrack("JP/R4D.ogg", 0, 1)
					break
				end switch
			else
				switch Object.SavedTimePeriod
				case TIME_PRESENT
					SetMusicTrack("US/R4A.ogg", 0, 415148)
					break
				case TIME_PAST
					SetMusicTrack("R4B.ogg", 0, 1)
					break
				case TIME_GOOD_FUTURE
					SetMusicTrack("US/R4C.ogg", 0, 1)
					break
				case TIME_BAD_FUTURE
					SetMusicTrack("US/R4D.ogg", 0, 145616)
					break
				end switch
			end if
			PlayMusic(0)
			break

		case 4
			if Options.Soundtrack == OST_JP
				switch Object.SavedTimePeriod
				case TIME_PRESENT
					SetMusicTrack("JP/R5A.ogg", 0, true)
					break
				case TIME_PAST
					SetMusicTrack("R5B.ogg", 0, 619562)
					break
				case TIME_GOOD_FUTURE
					SetMusicTrack("JP/R5C.ogg", 0, 367046)
					break
				case TIME_BAD_FUTURE
					SetMusicTrack("JP/R5D.ogg", 0, true)
					break
				end switch
			else
				switch Object.SavedTimePeriod
				case TIME_PRESENT
					SetMusicTrack("US/R5A.ogg", 0, true)
					break
				case TIME_PAST
					SetMusicTrack("R5B.ogg", 0, 619562)
					break
				case TIME_GOOD_FUTURE
					SetMusicTrack("US/R5C.ogg", 0, 705830)
					break
				case TIME_BAD_FUTURE
					SetMusicTrack("US/R5D.ogg", 0, 93672)
					break
				end switch
			end if
			PlayMusic(0)
			break

		case 5
			if Options.Soundtrack == OST_JP
				switch Object.SavedTimePeriod
				case TIME_PRESENT
					SetMusicTrack("JP/R6A.ogg", 0, 1)
					break
				case TIME_PAST
					SetMusicTrack("R6B.ogg", 0, 1)
					break
				case TIME_GOOD_FUTURE
					SetMusicTrack("JP/R6C.ogg", 0, 1)
					break
				case TIME_BAD_FUTURE
					SetMusicTrack("JP/R6D.ogg", 0, 1)
					break
				end switch
			else
				switch Object.SavedTimePeriod
				case TIME_PRESENT
					SetMusicTrack("US/R6A.ogg", 0, 926048)
					break
				case TIME_PAST
					SetMusicTrack("R6B.ogg", 0, 1)
					break
				case TIME_GOOD_FUTURE
					SetMusicTrack("US/R6C.ogg", 0, 181704)
					break
				case TIME_BAD_FUTURE
					SetMusicTrack("US/R6D.ogg", 0, 45355)
					break
				end switch
			end if
			PlayMusic(0)
			break

		case 6
			if Options.Soundtrack == OST_JP
				switch Object.SavedTimePeriod
				case TIME_PRESENT
					SetMusicTrack("JP/R7A.ogg", 0, true)
					break
				case TIME_PAST
					SetMusicTrack("R7B.ogg", 0, 730678)
					break
				case TIME_GOOD_FUTURE
					SetMusicTrack("JP/R7C.ogg", 0, 103060)
					break
				case TIME_BAD_FUTURE
					SetMusicTrack("JP/R7D.ogg", 0, true)
					break
				end switch
			else
				switch Object.SavedTimePeriod
				case TIME_PRESENT
					SetMusicTrack("US/R7A.ogg", 0, 617728)
					break
				case TIME_PAST
					SetMusicTrack("R7B.ogg", 0, 730678)
					break
				case TIME_GOOD_FUTURE
					SetMusicTrack("US/R7C.ogg", 0, 136670)
					break
				case TIME_BAD_FUTURE
					SetMusicTrack("US/R7D.ogg", 0, 92324)
					break
				end switch
			end if
			PlayMusic(0)
			break

		case 7
			if Options.Soundtrack == OST_JP
				switch Object.SavedTimePeriod
				case TIME_PRESENT
					SetMusicTrack("JP/R8A.ogg", 0, 146030)
					break
				case TIME_PAST
					SetMusicTrack("R8B.ogg", 0, 145748)
					break
				case TIME_GOOD_FUTURE
					SetMusicTrack("JP/R8C.ogg", 0, 1)
					break
				case TIME_BAD_FUTURE
					SetMusicTrack("JP/R8D.ogg", 0, 1)
					break
				end switch
			else
				switch Object.SavedTimePeriod
				case TIME_PRESENT
					SetMusicTrack("US/R8A.ogg", 0, 1)
					break
				case TIME_PAST
					SetMusicTrack("R8B.ogg", 0, 145748)
					break
				case TIME_GOOD_FUTURE
					SetMusicTrack("US/R8C.ogg", 0, 1)
					break
				case TIME_BAD_FUTURE
					SetMusicTrack("US/R8D.ogg", 0, 563962)
					break
				end switch
			end if
			PlayMusic(0)
			break

		case 8
			if Options.Soundtrack == OST_JP
				SetMusicTrack("JP/Invincibility.ogg", 0, false)
			else
				SetMusicTrack("US/Invincibility.ogg", 0, false)
			end if
			PlayMusic(0)
			break

		case 9
			if Options.Soundtrack == OST_JP
				SetMusicTrack("JP/SpeedShoes.ogg", 0, false)
			else
				SetMusicTrack("US/SpeedShoes.ogg", 0, false)
			end if
			PlayMusic(0)
			break

		case 10
			PlaySfx(SFX_G_1UP, false)
			break

		case 11
			PlaySfx(SFX_G_ACHIEVEMENT, false)
			break

		case 12
			if Options.Soundtrack == OST_JP
				SetMusicTrack("JP/SpecialStage.ogg", 0, true)
			else
				SetMusicTrack("US/SpecialStage.ogg", 0, true)
			end if
			PlayMusic(0)
			break

		case 13
			if Options.Soundtrack == OST_JP
				SetMusicTrack("JP/Titlescreen.ogg", 0, false)
			else
				SetMusicTrack("US/Titlescreen.ogg", 0, false)
			end if
			PlayMusic(0)
			break


		case 14
			if Options.Soundtrack == OST_JP
				SetMusicTrack("JP/Boss.ogg", 0, true)
			else
				SetMusicTrack("US/Boss.ogg", 0, true)
			end if
			PlayMusic(0)
			break

		case 15
			if Options.Soundtrack == OST_JP
				SetMusicTrack("JP/FinalBoss.ogg", 0, true)
			else
				SetMusicTrack("US/FinalBoss.ogg", 0, true)
			end if
			PlayMusic(0)
			break

		case 16
			if Options.Soundtrack == OST_JP
				SetMusicTrack("JP/ZoneComplete.ogg", 0, false)
			else
				SetMusicTrack("US/ZoneComplete.ogg", 0, false)
			end if
			PlayMusic(0)
			break

		case 17
			if Options.Soundtrack == OST_JP
				SetMusicTrack("JP/GameOver.ogg", 0, false)
			else
				SetMusicTrack("US/GameOver.ogg", 0, false)
			end if
			PlayMusic(0)
			break

		case 18
			// Oddly, the US OST has no time attack theme...
			SetMusicTrack("JP/TimeAttack.ogg", 0, false)
			PlayMusic(0)
			break
			
		end switch
	end if
end function


function StageSelect_HandleSecrets
	if KeyPress[0].ButtonA == true
		switch Object.DebugModeIndex
		case 0
			if Object.SoundTestNo == 1
				Object.DebugModeIndex++
			else
				Object.DebugModeIndex = 0
			end if
			break

		case 1
		case 2
		case 5
			if Object.SoundTestNo == 9
				Object.DebugModeIndex++
			else
				Object.DebugModeIndex = 0
			end if
			break

		case 3
		case 7
			if Object.SoundTestNo == 3
				Object.DebugModeIndex++
				if Object.DebugModeIndex == 8
					// Mobile versions don't really... have debug mode,
					// Exclude the para android kids
#platform: Standard
					PlaySfx(SFX_G_RING, false)
					Stage.DebugMode = true
#endplatform

				end if
			else
				Object.DebugModeIndex = 0
			end if
			break

		case 4
			if Object.SoundTestNo == 0
				Object.DebugModeIndex++
			else
				Object.DebugModeIndex = 0
			end if
			break

		case 6
			if Object.SoundTestNo == 2
				Object.DebugModeIndex++
			else
				Object.DebugModeIndex = 0
			end if
			break
			
		end switch

		switch Object.TimeStoneIndex
		case 0
			if Object.SoundTestNo == 4
				Object.TimeStoneIndex++
			else
				Object.TimeStoneIndex = 0
			end if
			break

		case 1
			if Object.SoundTestNo == 1
				Object.TimeStoneIndex++
			else
				Object.TimeStoneIndex = 0
			end if
			break

		case 2
			if Object.SoundTestNo == 2
				Object.TimeStoneIndex++
			else
				Object.TimeStoneIndex = 0
			end if
			break

		case 3
			if Object.SoundTestNo == 6
				Object.TimeStoneIndex++
				if Object.TimeStoneIndex == 4
					// Give the player all time stones
					PlaySfx(SFX_G_ACHIEVEMENT, false)
					SpecialStage.TimeStones = 127
				end if
			else
				Object.TimeStoneIndex = 0
			end if
			break
			
		end switch
	end if
end function


function StageSelect_HandleButtons
	// DPad
	TempValue0 = Screen.CenterX
	TempValue0 -= 56
	CheckTouchRect(0, 96, TempValue0, Screen.YSize)
	if CheckResult > -1
		ArrayPos0 = CheckResult

		// D-Pad XPos
		TempValue0  = TouchScreen[ArrayPos0].XPos
		TempValue0 -= 48
		// D-Pad YPos
		TempValue1  = TouchScreen[ArrayPos0].YPos
		TempValue1 -= 192

		// tldr; check what did you touch in the d-pad
		ATan2(TempValue2, TempValue0, TempValue1)
		TempValue2  += 32
		TempValue2  &= 255
		TempValue2 >>= 6
		switch TempValue2
		case 0
			KeyDown[0].right = true
			if Object.PressedLR == false
				KeyPress[0].right |= KeyDown[0].right
			end if
			Object.PressedLR = keyDown[0].right
			break

		case 1
			KeyDown[0].down = true
			break

		case 2
			KeyDown[0].left = true
			if Object.PressedLR == false
				KeyPress[0].left |= KeyDown[0].left
			end if
			Object.PressedLR = KeyDown[0].left
			break

		case 3
			KeyDown[0].up = true
			break
			
		end switch
	else
		Object.PressedLR = false
	end if

	// Button
	TempValue0 = Screen.XSize
	TempValue0 -= 62
	TempValue1 = TempValue0
	TempValue1 += 48
	CheckTouchRect(0, 0, Screen.XSize, Screen.YSize)
	if CheckResult > -1
		CheckTouchRect(TempValue0, 164, TempValue1, 214)
		if CheckResult > -1
			Object.Pressed = true
		else
			Object.Pressed = false
		end if
	else
		if Object.Pressed == true
			Object.Pressed = false
			if Object.CurrentSelection < 18
				KeyPress[0].Start = true
			else
				KeyPress[0].ButtonC = true
			end if
		end if
	end if
end function


sub ObjectMain
	switch Object.State
	case STAGESELECT_SETUP
		if Object.Timer < 8
			Object.Timer++
		else
			Object.Fade = 254
			Object.State++
			PlayMusic(Options.Soundtrack)
		end if
		SetScreenFade(0, 0, 0, 255)

		// This is 256 by default, fix that
		Object.SoundTestCooldown = 0
		break

	case STAGESELECT_FADE_IN
		if Object.Fade > 0
			SetScreenFade(0, 0, 0, Object.Fade)
			Object.Fade -= 8
		else
			Object.State++
		end if
		break

	case STAGESELECT_CONTROLS
		// No touch controls for non-mobile users, sorry
#platform: Mobile
		CallFunction(StageSelect_HandleButtons)
#endplatform

		if KeyDown[0].Up == true
			Object.HoldTimer++
			if Object.HoldTimer == 1
				if Object.SelectedMenu == 0
					Menu1.Selection--
					Object.CurrentSelection = Menu1.Selection
				else
					Menu2.Selection--
					Object.CurrentSelection = Menu2.Selection
				end if
				switch Object.CurrentSelection
				case -1
					if Object.SelectedMenu == 0
						Menu1.Selection = -1
						Menu2.Selection = 18
						Object.CurrentSelection = 0
						Object.SelectedMenu = 1
					else
						Menu1.Selection = 18
						Menu2.Selection = -1
						Object.CurrentSelection = 0
						Object.SelectedMenu = 0
					end if
					break

				case 3
				case 7
					if Object.SelectedMenu == 0
						Menu1.Selection--
						Object.CurrentSelection = Menu1.Selection
					else
						Menu2.Selection--
						Object.CurrentSelection = Menu2.Selection
					end if
					break

				case 11
				case 15
					if Object.SelectedMenu == 0
						Menu1.Selection--
						Object.CurrentSelection = Menu1.Selection
					end if
					break

				case 10
					if Object.SelectedMenu == 1
						Menu2.Selection = 8
						Object.CurrentSelection = Menu2.Selection
					end if
					break

				case 17
					if Object.SelectedMenu == 1
						Menu2.Selection = 13
						Object.CurrentSelection = Menu2.Selection
					end if
					break
					
				end switch
			end if
		else
			if KeyDown[0].Down == true
				Object.HoldTimer++
				if Object.HoldTimer == 1
					if Object.SelectedMenu == 0
						Menu1.Selection++
						Object.CurrentSelection = Menu1.Selection
					else
						Menu2.Selection++
						Object.CurrentSelection = Menu2.Selection
					end if
				end if
				switch Object.CurrentSelection
				case 3
				case 7
					if Object.SelectedMenu == 0
						Menu1.Selection++
						Object.CurrentSelection = Menu1.Selection
					else
						Menu2.Selection++
						Object.CurrentSelection = Menu2.Selection
					end if
					break


				case 11
				case 15
					if Object.SelectedMenu == 0
						Menu1.Selection++
						Object.CurrentSelection = Menu1.Selection
					end if
					break

				case 9
					if Object.SelectedMenu == 1
						Menu2.Selection = 11
						Object.CurrentSelection = Menu2.Selection
					end if
					break

				case 14
					if Object.SelectedMenu == 1
						Menu2.Selection = 18
						Object.CurrentSelection = Menu2.Selection
					end if
					break

				case 19
					if Object.SelectedMenu == 0
						Menu1.Selection = -1
						Menu2.Selection = 0
						Object.CurrentSelection = 0
						Object.SelectedMenu = 1
					else
						Menu1.Selection = 0
						Menu2.Selection = -1
						Object.CurrentSelection = 0
						Object.SelectedMenu = 0
					end if
					break
					
				end switch
			else
				Object.HoldTimer = 0
			end if
		end if

		Object.HoldTimer %= 12

		if KeyPress[0].Right == true
			if Object.SelectedMenu == 0
				Menu2.Selection = Menu1.Selection
				if Menu2.Selection >= 9
					if Menu2.Selection <= 11
						Menu2.Selection = 8
					end if
				end if
				if Menu2.Selection >= 14
					if Menu2.Selection <= 17
						Menu2.Selection = 13
					end if
				end if
				if Menu2.Selection == 18
					Object.SoundTestNo--
				end if
				Menu1.Selection = -1
				Object.SelectedMenu = 1
			else
				switch Menu2.Selection
				case 11
					TempValue0 = false

#platform: Use_Origins
					if Game.HasPlusDLC == true
						TempValue0 = true
					end if
#endplatform

					if TempValue0 == false
						Object.SavedPlayer ^= 1
						// Update the menu to match

						if Object.SavedPlayer == 0
							EditMenuEntry(MENU_2, "PLAYER@@@@@@@*00*", 11, false)
						else
							EditMenuEntry(MENU_2, "PLAYER@@@@@@@*01*", 11, false)
						end if
					else
						Object.SavedPlayer++
						Object.SavedPlayer &= 3
						// Update the menu to match

						switch Object.SavedPlayer
						case 0
							EditMenuEntry(MENU_2, "PLAYER@@@@@@@*00*", 11, false)
							break

						case 1
							EditMenuEntry(MENU_2, "PLAYER@@@@@@@*01*", 11, false)
							break

						case 2
							EditMenuEntry(MENU_2, "PLAYER@@@@@@@*02*", 11, false)
							break

						case 3
							EditMenuEntry(MENU_2, "PLAYER@@@@@@@*03*", 11, false)
							break
							
						end switch
					end if
					break	
					
				case 12

					Options.OriginalControls ^= true

					// Update the menu
					if Options.OriginalControls == false
						EditMenuEntry(MENU_2, "CONTROLS@@@@@*MD*", 12, false)
					else
						EditMenuEntry(MENU_2, "CONTROLS@@@@@*CD*", 12, false)
					end if
					break

				case 13
					Object.SavedTimePeriod++
					if Object.SavedTimePeriod > TIME_BAD_FUTURE
						Object.SavedTimePeriod = TIME_PRESENT
					end if

					// Do the menu changing stuff
					switch Object.SavedTimePeriod
					default
					case TIME_PRESENT
						EditMenuEntry(MENU_2, "TIME PERIOD@@*PR*", 13, false)
						break

					case TIME_PAST
						EditMenuEntry(MENU_2, "TIME PERIOD@@*PA*", 13, false)
						break

					case TIME_GOOD_FUTURE
						EditMenuEntry(MENU_2, "TIME PERIOD@@*GF*", 13, false)
						break

					case TIME_BAD_FUTURE
						EditMenuEntry(MENU_2, "TIME PERIOD@@*BF*", 13, false)
						break

					end switch
					break
					
				end switch
			end if
		end if

		if KeyPress[0].Left == true
			if Object.CurrentSelection < 11
				if Menu2.Selection != 18
					if Object.SelectedMenu == 1
						Menu1.Selection = Menu2.Selection
							if Menu1.Selection == 11
							Menu1.Selection = 10
						end if
						Menu2.Selection = -1
						Object.SelectedMenu = 0
					end if
				end if
			else
				switch Menu2.Selection
				case 11
					TempValue0 = false

#platform: Use_Origins
					if Game.HasPlusDLC == true
						TempValue0 = true
					end if
#endplatform

					if TempValue0 == false
						Object.SavedPlayer ^= 1
						// Update the menu to match

						if Object.SavedPlayer == 0
							EditMenuEntry(MENU_2, "PLAYER@@@@@@@*00*", 11, false)
						else
							EditMenuEntry(MENU_2, "PLAYER@@@@@@@*01*", 11, false)
						end if
					else
						Object.SavedPlayer--
						Object.SavedPlayer &= 3
						// Update the menu to match

						switch Object.SavedPlayer
						case 0
							EditMenuEntry(MENU_2, "PLAYER@@@@@@@*00*", 11, false)
							break

						case 1
							EditMenuEntry(MENU_2, "PLAYER@@@@@@@*01*", 11, false)
							break

						case 2
							EditMenuEntry(MENU_2, "PLAYER@@@@@@@*02*", 11, false)
							break

						case 3
							EditMenuEntry(MENU_2, "PLAYER@@@@@@@*03*", 11, false)
							break
							
						end switch
					end if
					break

				case 12

					Options.OriginalControls ^= true

					// Update the menu
					if Options.OriginalControls == false
						EditMenuEntry(MENU_2, "CONTROLS@@@@@*MD*", 12, false)
					else
						EditMenuEntry(MENU_2, "CONTROLS@@@@@*CD*", 12, false)
					end if
					break

				case 13
					Object.SavedTimePeriod--
					if Object.SavedTimePeriod != TIME_PRESENT
						if Object.SavedTimePeriod != TIME_PAST
							if Object.SavedTimePeriod != TIME_GOOD_FUTURE
								Object.SavedTimePeriod = TIME_BAD_FUTURE
							end if
						end if
					end if

					// Do the menu changing stuff
					switch Object.SavedTimePeriod
					case TIME_PRESENT
						EditMenuEntry(MENU_2, "TIME PERIOD@@*PR*", 13, false)
						break

					case TIME_PAST
						EditMenuEntry(MENU_2, "TIME PERIOD@@*PA*", 13, false)
						break

					case TIME_GOOD_FUTURE
						EditMenuEntry(MENU_2, "TIME PERIOD@@*GF*", 13, false)
						break

					case TIME_BAD_FUTURE
						EditMenuEntry(MENU_2, "TIME PERIOD@@*BF*", 13, false)
						break

					end switch
					break
					
				end switch
			end if
		end if

		// The Sound Test specifically is a little bit more complicated than the others
		// So, it gets its own space of operations!
		// What do you MEAN this looks like a port from S1 2013?
		// This is fully original code!!!!!!!!
		if Menu2.Selection == 18
			if Object.SoundTestCooldown > 0
				Object.SoundTestCooldown--
			end if

			if KeyPress[0].ButtonC == true
				// Add 16 to the count
				Object.SoundTestNo += 16
			end if

			if keyPress[0].left == true
				Object.SoundTestNo--
			end if

			if keyPress[0].right == true
				Object.SoundTestNo++
			end if

			// There are only 32 entries
			Object.SoundTestNo &= 31

			if KeyPress[0].ButtonA == true
				CallFunction(StageSelect_PlaySong)
				CallFunction(StageSelect_HandleSecrets)
			end if

			if KeyPress[0].ButtonB == true
				CallFunction(StageSelect_PlaySong)
				CallFunction(StageSelect_HandleSecrets)
			end if
		end if

		TempValue0  = KeyPress[0].Start
		if Menu2.Selection != 18
			TempValue0 |= KeyPress[0].ButtonA
		end if
		if TempValue0 == true
			CheckEqual(Object.CurrentSelection, 2)
			TempValue0 = CheckResult
			CheckEqual(Object.CurrentSelection, 6)
			TempValue0 |= CheckResult
			CheckEqual(Menu1.Selection, 10)
			TempValue0 |= CheckResult
			CheckEqual(Menu1.Selection, 14)
			TempValue0 |= CheckResult
			CheckEqual(Menu1.Selection, 18)
			TempValue0 |= CheckResult
			CheckLower(Object.SavedTimePeriod, TIME_GOOD_FUTURE)
			TempValue0 &= CheckResult
			if TempValue0 == true
				PlayStageSfx(SFX_G_FAIL, false)
			else
				if Menu2.Selection == 8
					StopMusic()
					PlaySfx(SFX_G_SPECIALWARP, false)
					Object.State = STAGESELECT_LOAD_SPECIAL
				else
					Object.State = STAGESELECT_LOAD_LEVEL
				end if
			end if
		end if

		if KeyPress[0].ButtonB == true
			Object.State = STAGESELECT_EXIT
		end if
		break

	case STAGESELECT_LOAD_LEVEL
		if Object.Fade < 288
			Object.Fade += 8
			Music.Volume -= 2
		else
			Options.GameMode = MODE_NOSAVE
#platform: Mobile
			Player.Lives	 = 3
#endplatform
			Stage.ActiveList = REGULAR_STAGE
			Stage.ListPos	 = Object.CurrentSelection
			switch Object.CurrentSelection
			case 1
			case 5
			case 9
			case 13
			case 17
				Stage.ListPos += 3
				break

			case 2
			case 6
			case 10
			case 14
			case 18
				Stage.ListPos += 6
				break
				
			end switch
			if Object.CurrentSelection > 3
				Stage.ListPos += 6
			end if
			if Object.CurrentSelection > 7
				Stage.ListPos += 6
			end if
			if Object.SelectedMenu == 0
				if Object.CurrentSelection > 11
					Stage.ListPos += 6
				end if
				if Object.CurrentSelection > 15
					Stage.ListPos += 6
				end if
			end if
			if Object.SelectedMenu == 1
				if Menu2.Selection < 11
					Stage.ListPos += 50
				else
					Stage.ActiveList = PRESENTATION_STAGE
					Stage.ListPos = STAGE_P_TITLE
				end if
			end if
			CheckEqual(Object.CurrentSelection, 2)
			TempValue0 = CheckResult
			CheckEqual(Object.CurrentSelection, 6)
			TempValue0 |= CheckResult
			CheckEqual(Menu1.Selection, 10)
			TempValue0 |= CheckResult
			CheckEqual(Menu1.Selection, 14)
			TempValue0 |= CheckResult
			CheckEqual(Menu1.Selection, 18)
			TempValue0 |= CheckResult
			if TempValue0 == true
				Stage.ListPos -= 2
			end if
			if Menu2.Selection < 11
				Stage.ListPos += Object.SavedTimePeriod
			end if
			Stage.PlayerListPos = Object.SavedPlayer
#platform: Use_Origins
			if Stage.PlayerListPos == 3
				// Amy is player 5...
				Stage.PlayerListPos = 5
			end if
#endplatform
			Music.Volume = 0
			LoadStage()
		end if
		TempValue0 = Object.Fade
		if TempValue0 > 255
			TempValue0 = 255
		end if
		SetScreenFade(0, 0, 0, TempValue0)
		break

	case STAGESELECT_LOAD_SPECIAL
		if Object.Fade < 768
			Object.Fade += 8
		else
			Options.GameMode = MODE_NOSAVE
#platform: Mobile
			Player.Lives	 = 3
#endplatform
			Stage.ActiveList = SPECIAL_STAGE
			Stage.ListPos	 = Object.SoundTestNo
			if Object.SoundTestNo >= 8
				Stage.ListPos = STAGE_S_SZ1
			end if
			Stage.PlayerListPos = Object.SavedPlayer
#platform: Use_Origins
			if Stage.PlayerListPos == 3
				// fun fact: amy is also player 5 in s1 and 2!
				// they probably coded amy as player list pos 5 here
				// so that they didnt have to adjust the engine player select
				// menu to send you to player list pos 3 specifically in cd
				Stage.PlayerListPos = 5
			end if
#endplatform
			LoadStage()
		end if
		Fade_Colour    = 208
		Fade_Colour  <<= 16
		TempValue0   = 255
		TempValue0 <<= 8
		Fade_Colour   += TempValue0
		Fade_Colour   += 224
		TempValue0   = Object.Fade
		if TempValue0 > 255
			TempValue0 = 255
		end if
		SetScreenFade(208, 255, 224, TempValue0)
		break

	case STAGESELECT_EXIT
		if Object.Fade < 288
			Object.Fade += 8
		else
			Options.GameMode = MODE_NOSAVE
			Stage.ActiveList = PRESENTATION_STAGE
			Stage.ListPos	 = STAGE_P_MENU
			LoadStage()
		end if
		TempValue0 = Object.Fade
		if TempValue0 > 255
			TempValue0 = 255
		end if
		SetScreenFade(0, 0, 0, TempValue0)
		break

	end switch
end sub


sub ObjectDraw
	Stage.ActiveLayer[0] = 1
	Object.Priority = PRIORITY_ACTIVE

	CallFunction(StageSelect_HandleBG)

	SetActivePalette(0, 0, Screen.YSize)
	LoadSpriteSheet("Secrets/Text.gif")
	TempValue0 = Screen.CenterX
	TempValue0 -= 10
	DrawMenu(MENU_1, TempValue0, 16)

	TempValue0 = Screen.CenterX
	TempValue0 += 142
	DrawMenu(MENU_2, TempValue0, 16)

	// Draw the first digit
	TempValue0 = Object.SoundTestNo
	TempValue0 >>= 4
	if Menu2.Selection == 18
		TempValue0 += 16
	end if
	TempValue1 = Screen.CenterX
	TempValue1 += 118
	DrawSpriteScreenXY(TempValue0, TempValue1, 160)

	// And then draw the second digit
	TempValue1 += 8
	TempValue0 = Object.SoundTestNo
	TempValue0 &= 15
	if Menu2.Selection == 18
		TempValue0 += 16
	end if
	DrawSpriteScreenXY(TempValue0, TempValue1, 160)

	SetActivePalette(2, 0, Screen.YSize)
	LoadSpriteSheet("Secrets/Icons.gif")
	DrawSpriteScreenXY(41, Screen.CenterX, 198)

	switch Menu1.Selection
	default
		break

	case 0
	case 1
	case 2
		DrawSpriteScreenXY(33, Screen.CenterX, 198)
		break

	case 4
	case 5
	case 6
		DrawSpriteScreenXY(34, Screen.CenterX, 198)
		break

	case 8
	case 9
	case 10
		DrawSpriteScreenXY(35, Screen.CenterX, 198)
		break

	case 12
	case 13
	case 14
		DrawSpriteScreenXY(36, Screen.CenterX, 198)
		break

	case 16
	case 17
	case 18
		DrawSpriteScreenXY(37, Screen.CenterX, 198)
		break
		
	end switch

	switch Menu2.Selection
	default
		break

	case 0
	case 1
	case 2
		DrawSpriteScreenXY(38, Screen.CenterX, 198)
		break

	case 4
	case 5
	case 6
		DrawSpriteScreenXY(39, Screen.CenterX, 198)
		break

	case 8
		DrawSpriteScreenXY(40, Screen.CenterX, 198)
		break

	case 11
	case 12
	case 13
	case 18
		DrawSpriteScreenXY(32, Screen.CenterX, 198)
		break
		
	end switch

#platform: Mobile
	if KeyDown[0].up == true
		DrawSpriteScreenXY(47, 64, 194)
	else
		DrawSpriteScreenXY(46, 64, 194)
	end if

	if KeyDown[0].down == true
		DrawSpriteScreenXY(49, 64, 194)
	else
		DrawSpriteScreenXY(48, 64, 194)
	end if

	if KeyDown[0].left == true
		DrawSpriteScreenXY(51, 64, 194)
	else
		DrawSpriteScreenXY(50, 64, 194)
	end if

	if KeyDown[0].right == true
		DrawSpriteScreenXY(53, 64, 194)
	else
		DrawSpriteScreenXY(52, 64, 194)
	end if

	TempValue0 = screen.xsize
	TempValue0 -= 38
	if Object.CurrentSelection < 18 // (Selection 18 is the Sound Test btw)
		if Object.Pressed == true
			DrawSpriteScreenXY(43, TempValue0, 194)
		else
			DrawSpriteScreenXY(42, TempValue0, 194)
		end if
	else
		if Object.Pressed == true
			DrawSpriteScreenXY(45, TempValue0, 194)
		else
			DrawSpriteScreenXY(44, TempValue0, 194)
		end if
	end if
#endplatform

	SetActivePalette(0, 0, Screen.YSize)
end sub


sub ObjectStartup
	LoadSpriteSheet("Secrets/Text.gif")

	// Using loops to automate Sprite Framing

	// 0-9 Numbers, Unhighlighted White
	TempValue0 = 0
	while TempValue0 < 80
		SpriteFrame(0, 0, 8, 8, TempValue0, 24)
		TempValue0 += 8
	loop
	
	// A-F Letters, Unhighlighted White
	TempValue0 = 8
	while TempValue0 < 56
		SpriteFrame(0, 0, 8, 8, TempValue0, 32)
		TempValue0 += 8
	loop
	
	// 0-9 Numbers, Highlighted Yellow
	TempValue0 = 0
	while TempValue0 < 80
		SpriteFrame(0, 0, 8, 8, TempValue0, 152)
		TempValue0 += 8
	loop
	
	// A-F Letters, Highlighted Yellow
	TempValue0 = 8
	while TempValue0 < 56
		SpriteFrame(0, 0, 8, 8, TempValue0, 160)
		TempValue0 += 8
	loop

	// Preview frames
	SpriteFrame(56, -12, 32, 24, 0, 50)   // Sonic vibin'
	SpriteFrame(56, -12, 32, 24, 1, 85)   // R1
	SpriteFrame(56, -12, 32, 24, 34, 85)  // R3
	SpriteFrame(56, -12, 32, 24, 67, 85)  // R4
	SpriteFrame(56, -12, 32, 24, 100, 85) // R5
	SpriteFrame(56, -12, 32, 24, 133, 85) // R6
	SpriteFrame(56, -12, 32, 24, 166, 85) // R7
	SpriteFrame(56, -12, 32, 24, 199, 85) // R8
	SpriteFrame(56, -12, 32, 24, 180, 60) // Special Zone
	
	// Frame
	SpriteFrame(32, -24, 80, 50, 0, 0)

	SpriteFrame(-20, -10, 40, 20, 97, 1)	// Blue `GO` button
	SpriteFrame(-20, -10, 40, 20, 97, 43)	// Blue large right arrow
	SpriteFrame(-20, -10, 40, 20, 97, 22)	// Red `GO` button
	SpriteFrame(-20, -10, 40, 20, 97, 64)	// Red large right arrow

	SpriteFrame(-10, -30, 20, 20, 138, 1)	// Blue up arrow
	SpriteFrame(-10, -30, 20, 20, 138, 43)	// Red up arrow
	SpriteFrame(-10, 10, 20, 20, 159, 1)	// Blue down arrow
	SpriteFrame(-10, 10, 20, 20, 159, 43)	// Red down arrow
	SpriteFrame(-30, -10, 20, 20, 138, 22)	// Blue left arrow
	SpriteFrame(-30, -10, 20, 20, 138, 64)	// Red left arrow
	SpriteFrame(10, -10, 20, 20, 159, 22)	// Blue right arrow
	SpriteFrame(10, -10, 20, 20, 159, 64)	// Red right arrow

	// Setup the menu and its entries

	// Left column
	SetupMenu(MENU_1, 0, 3, 1)
	AddMenuEntry(MENU_1, "PALMTREE PANIC 1", true)
	AddMenuEntry(MENU_1, "2", false)
	AddMenuEntry(MENU_1, "3", false)
	AddMenuEntry(MENU_1, " ", false)
	AddMenuEntry(MENU_1, "COLLISION CHAOS 1", true)
	AddMenuEntry(MENU_1, "2", false)
	AddMenuEntry(MENU_1, "3", false)
	AddMenuEntry(MENU_1, " ", false)
	AddMenuEntry(MENU_1, "TIDAL TEMPEST 1", true)
	AddMenuEntry(MENU_1, "2", false)
	AddMenuEntry(MENU_1, "3", false)
	AddMenuEntry(MENU_1, " ", false)
	AddMenuEntry(MENU_1, "QUARTZ QUADRANT 1", true)
	AddMenuEntry(MENU_1, "2", false)
	AddMenuEntry(MENU_1, "3", false)
	AddMenuEntry(MENU_1, " ", false)
	AddMenuEntry(MENU_1, "WACKY WORKBENCH 1", true)
	AddMenuEntry(MENU_1, "2", false)
	AddMenuEntry(MENU_1, "3", false)
	AddMenuEntry(MENU_1, " ", false)

	// Right column
	SetupMenu(MENU_2, 0, 3, 1)
	AddMenuEntry(MENU_2, "STARDUST SPDWAY 1", true)
	AddMenuEntry(MENU_2, "2", false)
	AddMenuEntry(MENU_2, "3", false)
	AddMenuEntry(MENU_2, " ", false)
	AddMenuEntry(MENU_2, "METALLIC MADNESS 1", true)
	AddMenuEntry(MENU_2, "2", false)
	AddMenuEntry(MENU_2, "3", false)
	AddMenuEntry(MENU_2, " ", false)
	AddMenuEntry(MENU_2, "SPECIAL ZONE ", true)
	AddMenuEntry(MENU_2, " ", false)
	AddMenuEntry(MENU_2, " ", false)

	AddMenuEntry(MENU_2, "PLAYER@@@@@@@*00*", true)

	if Options.OriginalControls == false
		AddMenuEntry(MENU_2, "CONTROLS@@@@@*MD*", true)
	else
		AddMenuEntry(MENU_2, "CONTROLS@@@@@*CD*", true)
	end if

	AddMenuEntry(MENU_2, "TIME PERIOD@@*PR*", false)

	AddMenuEntry(MENU_2, " ", false)
	AddMenuEntry(MENU_2, " ", false)
	AddMenuEntry(MENU_2, " ", false)
	AddMenuEntry(MENU_2, " ", false)
	AddMenuEntry(MENU_2, "SOUND TEST *@@*", true)

	Menu1.Selection =  0
	Menu2.Selection = -1

	if Stage.ActNo != 1
		LoadPalette("SoundTest_Pal.act", 0, 0, 0, 256)
	else
		SetMusicTrack("JP/DAGarden.ogg", 0, 1)
		SetMusicTrack("US/DAGarden.ogg", 1, 117382)
		LoadPalette("Icons_Pal.act", 2, 0, 0, 112)
	end if
end sub


// ========================
// Editor Subs
// ========================

sub RSDKDraw
	DrawSprite(0)
end sub


sub RSDKLoad
	LoadSpriteSheet("Secrets/SecretMenus.gif")
	SpriteFrame(-48, 0, 96, 16, 136, 66)		// #0 - Stage Select

	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end sub
