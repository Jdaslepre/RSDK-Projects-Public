//-----------------Sonic CD Lamp Post Script------------------//
//--------Scripted by Christian Whitehead 'The Taxman'--------//
//-------Unpacked By Rubberduckycooly's Script Unpacker-------//

// Aliases
#alias Object.Value0	:	Object.PowerUpPos
#alias Object.Value1	:	Object.Timer
#alias Object.Value2	:	Object.GravityStrength

// Player Aliases
#alias Player.Value0			:	Player.Rings

//HUD alias
#alias Object[24].PropertyValue	:	HUD.CurrentTimePeriod

// Gravity
#alias 1	:	GRAVITY_AIR

// Priority
#alias 1	:	PRIORITY_ACTIVE

// Ink Effects
#alias 2	:	INK_ALPHA

// Collision Sides
#alias 0	:	CSIDE_FLOOR

#alias 9	:	SFX_G_LAMPPOST

// Time Periods
#alias 0	:	TIME_PRESENT

// Hit Values
#alias 4	:	PLAYER_COL_ROOF

// Global SFX
#alias 8	:	SFX_G_DESTROY

// States
#alias 0	:	MONITOR_IDLE
#alias 1	:	MONITOR_FALLING
#alias 2	:	MONITOR_RISE
#alias 3	:	MONITOR_FADE

// Monitor type aliases
#alias 0	:	MONITOR_BLANK

sub ObjectPlayerInteraction
	if Object.Frame != 1
		TempValue0 = false
		if Player.Gravity == GRAVITY_AIR
			if Player.YVelocity < 0
				TempValue0 = true
			end if
		end if

		if TempValue0 == false
			// Technically also part of the origins code below
			// but it would make a mess just for keeping essentially the same check so
			CheckResult = false
			if Player.Animation == ANI_JUMPING
				CheckResult = true
			end if
#platform: Use_Origins
			if Stage.PlayerListPos == PLAYER_KNUCKLES
				if Player.Animation == ANI_GLIDING
					CheckResult = true
				end if
				if Player.Animation == ANI_GLIDING_STOP
					CheckResult = true
				end if
			end if
			
			if Stage.PlayerListPos == PLAYER_AMY
				if Player.Animation == ANI_HAMMER_JUMP
					CheckResult = true
				end if
				if Player.Animation == ANI_HAMMER_DASH
					CheckResult = true
				end if
			end if
#endplatform
			if CheckResult == true
				PlayerObjectCollision(C_TOUCH, -16, -14, 16, 16)
				if CheckResult == true
					CreateTempObject(TypeName[Smoke Puff], 0, Object.XPos, Object.YPos)

					Object[TempObjectPos].DrawOrder = 4

					FlipSign(Player.YVelocity)
					if Player.YVelocity > -0x20000
						Player.YVelocity = -0x20000
					end if

					Object.State = MONITOR_RISE
					Object.Frame = 1
					Object.Priority	= PRIORITY_ACTIVE
					Object.Alpha		= 255
					Object.PowerUpPos = Object.YPos
					Object.Timer		= -0x30000
					PlaySfx(SFX_G_DESTROY, false)
				
#platform: Use_Haptics
					HapticEffect(16, 0, 0, 0)
#endplatform

				end if
			else
				PlayerObjectCollision(C_PLATFORM, -15, -14, 15, -4)
			end if
		else
			PlayerObjectCollision(C_BOX, -15, -16, 15, 16)
			if CheckResult == PLAYER_COL_ROOF
				Object.State			= MONITOR_FALLING
				Object.GravityStrength	= -0x20000

				Player.YVelocity = 0x20000
			end if
		end if
	else
		switch Object.state
		case MONITOR_RISE
			if Object.Timer < 0
				Object.PowerUpPos += Object.Timer
				Object.Timer += 0x1800
			else
				Object.Timer = 0
			end if

			if Object.Timer == 0
				Object.State = MONITOR_FADE
				Object.inkEffect = INK_ALPHA

				// Record a bunch of values
				LampPost.Check = Object.EntityNo

#platform: Use_Origins
				recStage = Stage.ListPos
				recScore = Player.Score
				recRing  = Player.Rings
#endplatform
				
				Rec_Milliseconds = Stage.MilliSeconds
				Rec_Seconds		 = Stage.Seconds
				Rec_Minutes		 = Stage.Minutes

#platform: Use_Origins
				StatsUsabilityParam1 = StageStatsUsabilityParam1
				StatsUsabilityParam2 = StageStatsUsabilityParam2
				StatsUsabilityParam3 = StageStatsUsabilityParam3
				StatsUsabilityParam4 = StageStatsUsabilityParam4
				StatsUsabilityParam5 = StageStatsUsabilityParam5
#endplatform

				PlaySfx(SFX_G_LAMPPOST, false)
					
#platform: Use_Haptics
				HapticEffect(20, 0, 0, 0)
#endplatform
				
#platform: Use_Origins
				// Let the Engine know if we've hit a checkpoint
				if Options.AttractMode == false
					EngineCallback(NOTIFY_TOUCH_CHECKPOINT)
				end if
#endplatform
			end if
			break

		case MONITOR_FADE
			Object.Timer++
			if Object.Timer == 30
				Object.Timer = 0
				Object.State = MONITOR_IDLE
				Object.PropertyValue = MONITOR_BLANK
			else
				if Object.Timer > 14
					Object.Alpha -= 16
				end if
			end if
			break

		case MONITOR_IDLE
			break
			
		end switch
	end if
end sub


sub ObjectDraw
	DrawSprite(Object.Frame)

	if Object.Frame != 1
		Object.AnimationTimer++
		if Object.AnimationTimer > 17
			Object.AnimationTimer = 0
		end if

		switch Object.AnimationTimer
		case 0
		case 1
			DrawSprite(0)
			break

		case 6
		case 7
			DrawSprite(3)
			break

		case 12
		case 13
			DrawSprite(4)
			break

		default
			DrawSprite(2)
			
		end switch
	else
		DrawSpriteFX(2, FX_INK, Object.XPos, Object.PowerUpPos)
	end if
end sub


sub ObjectStartup
	LoadSpriteSheet("Global/Items.gif")

	// Monitor frames

	// Base monitor sprites
	SpriteFrame(-16, -16, 32, 32, 51, 67)	// #0 - Normal
	SpriteFrame(-16, 0, 32, 16, 51, 166)	// #1 - Broken

	// Icons
	SpriteFrame(-8, -9, 16, 14, 75, 263)	// #2 - Marker Monitor

	SpriteFrame(-16, -16, 32, 32, 51, 1)	// #3 - Monitor Static 1
	SpriteFrame(-16, -16, 32, 32, 51, 34)	// #4 - Monitor Static 2

	ArrayPos0 = 32
	while ArrayPos0 < 1056
		if Object[ArrayPos0].Type == TypeName[Lamp Post]
			// Move all Lamp Posts down to be on the ground since,
			// y'know, Marker Monitor
			Object[ArrayPos0].iYPos += 8
		end if

		ArrayPos0++
	loop

#platform: Use_Origins
	if game.playMode == BOOT_PLAYMODE_BOSSRUSH
		if LampPost.Check > 31
			ArrayPos0	 = LampPost.Check
			Player.XPos  = Object[ArrayPos0].XPos
			Player.XPos += LampPost.Side
			Player.YPos  = Object[ArrayPos0].YPos

			Object[ArrayPos0].State = MONITOR_IDLE
			Object[ArrayPos0].Frame = 1

			Player.Score = recScore

			if Player.deadResetRings == true
				Player.Rings = 0
				Player.deadResetRings = false
			else
				Player.Rings = recRing
			end if
			
			Ring.ExtraLife  = 100
			Ring.ExtraLife += Player.Rings

			TempValue0  = Player.Rings
			TempValue0 %= 100

			Ring.ExtraLife -= TempValue0
			if Ring.ExtraLife > 300
				Ring.ExtraLife = 1000
			end if

			Stage.MilliSeconds	= Rec_Milliseconds
			Stage.Seconds		= Rec_Seconds
			Stage.Minutes		= Rec_Minutes
		end if
	else
		if Warp.XPos == 0
			if HUD.CurrentTimePeriod == TIME_PRESENT
				if LampPost.Check > 31
					ArrayPos0	 = LampPost.Check
					Player.XPos  = Object[ArrayPos0].XPos
					Player.XPos += LampPost.Side
					Player.YPos  = Object[ArrayPos0].YPos

					Object[ArrayPos0].State = MONITOR_IDLE
					Object[ArrayPos0].Frame = 1

					Player.Score = recScore
					if Player.deadResetRings == true
						Player.Rings = 0
						Player.deadResetRings = false
					else
						Player.Rings = recRing
					end if
					
					Ring.ExtraLife  = 100
					Ring.ExtraLife += Player.Rings

					TempValue0  = Player.Rings
					TempValue0 %= 100

					Ring.ExtraLife -= TempValue0
					if Ring.ExtraLife > 300
						Ring.ExtraLife = 1000
					end if
					
					Stage.MilliSeconds	= Rec_Milliseconds
					Stage.Seconds		= Rec_Seconds
					Stage.Minutes		= Rec_Minutes
				else
					game.timeOver = false
				end if
			end if
		end if
	end if
	
	if StageStatsUsabilityParam5 == 0
		StageStatsUsabilityParam1 = StatsUsabilityParam1
		StageStatsUsabilityParam2 = StatsUsabilityParam2
		StageStatsUsabilityParam3 = StatsUsabilityParam3
		StageStatsUsabilityParam4 = StatsUsabilityParam4
		StageStatsUsabilityParam5 = StatsUsabilityParam5
	end if
	StageStatsUsabilityParam5 = 0
#endplatform

#platform: Use_Standalone
	if Warp.XPos == 0
		if HUD.CurrentTimePeriod == TIME_PRESENT
			if LampPost.Check > 31
				ArrayPos0	 = LampPost.Check
				Player.XPos  = Object[ArrayPos0].XPos
				Player.XPos += LampPost.Side
				Player.YPos  = Object[ArrayPos0].YPos

				Object[ArrayPos0].State = MONITOR_IDLE
				Object[ArrayPos0].Frame = 1

				Stage.MilliSeconds	= Rec_Milliseconds
				Stage.Seconds		= Rec_Seconds
				Stage.Minutes		= Rec_Minutes
			end if
		end if
	end if

#endplatform
end sub


// ========================
// Editor subs
// ========================

sub RSDKDraw
	DrawSprite(0)
end sub


sub RSDKLoad
	LoadSpriteSheet("Global/Items.gif")
	SpriteFrame(-8, -44, 16, 64, 1, 137)
	
	// unused, BUT there are values in the editor which suggest it's supposed to be "lampPostID"
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end sub
